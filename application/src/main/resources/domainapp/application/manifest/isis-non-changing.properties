#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#  
#         http://www.apache.org/licenses/LICENSE-2.0
#         
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.





#isis.services.eventbus.implementation=guava
isis.services.eventbus.implementation=axon


#################################################################################
#
# MetaModel
#
# The metamodel typically does not require additional configuration, although
# the system components (defined above) may refine the metamodel for their needs.
#
#################################################################################


#
# Additional programming model facet factories, or remove standard facet factories.
# Comma separated list of fully qualified class names.
#
#isis.reflector.facets.include=
#isis.reflector.facets.exclude=


#
# Metamodel validation (in addition to that automatically performed by the programming model facet factories)
# Default implementation does nothing.
#
# Use a custom implementation to enforce additional constraints specific to your app/project/company.
#
#isis.reflector.validator=org.apache.isis.core.metamodel.metamodelvalidator.dflt.MetaModelValidatorDefault



#
# Whether to allow deprecated annotations/method prefixes (otherwise raise metamodel validation errors).
# If not specified, default is to allow.
#
isis.reflector.validator.allowDeprecated=false


#
# Whether to check that JAXB view models are not abstract.  If not specified, default is to validate.
#
#isis.reflector.validator.jaxbViewModelNotAbstract=true

#
# Whether to check that JAXB view models are not inner classes.  If not specified, default is to validate.
#
#isis.reflector.validator.jaxbViewModelNotInnerClass=true

#
# Whether to check that JAXB view models have no-arg constructors.  If not specified, default is NOT to validate.
#
#isis.reflector.validator.jaxbViewModelNoArgConstructor=false

#
# Whether to check that, for JAXB view model with properties referencing persistent entities, that those entities
# are annotated with @XmlJavaTypeAdapter.  If not specified, default is to validate.
#
#isis.reflector.validator.jaxbViewModelReferenceTypeAdapter=true

#
# Whether to check that, for JAXB view model with date/time properties, that those properties are annotated with
# @XmlJavaTypeAdapter.  If not specified, default is to validate.
#
#isis.reflector.validator.jaxbViewModelDateTimeTypeAdapter=true


#
# Whether to validate JDOQL clauses.  If not specified, default is to validate.
#
#isis.reflector.validator.jdoqlFromClause=true
#isis.reflector.validator.jdoqlVariablesClause=true


#
# Whether to only allow hideXxx() and disableXxx() methods with no params.
# If not specified, defaults to false (ie will also search for methods with parameter types matching the action).
#
isis.reflector.validator.noParamsOnly=true


#
# Whether to require the object type to be specified explicitly for entities.
# If not specified, defaults to false
#
isis.reflector.validator.explicitObjectType=true


#
# Whether to ignore or honour (at least some of the) deprecated annotations/method prefixes.
# If not specified, default is to honour
#
#isis.reflector.facets.ignoreDeprecated=false


#
# Whether to enforce the rule that domain services can only declare actions, not properties and collections.
# If not specified, defaults to false
#
isis.reflector.validator.serviceActionsOnly=true


#
# Whether to use only mixins, and no contributed services.
# If not specified, defaults to false
#
isis.reflector.validator.mixinsOnly=true




#
# patterns for applying CssClassFa facet (font-awesome icons), matching on action names
#
isis.reflector.facet.cssClassFa.patterns=\
                        new.*:fa-plus,\
                        add.*:fa-plus-square,\
                        create.*:fa-plus,\
                        update.*:fa-edit,\
                        delete.*:fa-trash,\
                        save.*:fa-floppy-o,\
                        change.*:fa-edit,\
                        edit.*:fa-pencil-square-o,\
                        maintain.*:fa-edit,\
                        remove.*:fa-minus-square,\
                        copy.*:fa-copy,\
                        move.*:fa-exchange,\
                        first.*:fa-star,\
                        find.*:fa-search,\
                        lookup.*:fa-search,\
                        search.*:fa-search,\
                        view.*:fa-search,\
                        clear.*:fa-remove,\
                        previous.*:fa-step-backward,\
                        next.*:fa-step-forward,\
                        list.*:fa-list, \
                        all.*:fa-list, \
                        download.*:fa-download, \
                        upload.*:fa-upload, \
                        export.*:fa-download,\
                        switch.*:fa-exchange,\
                        import.*:fa-upload,\
                        execute.*:fa-bolt, \
                        run.*:fa-bolt, \
                        calculate.*:fa-calculator, \
                        verify.*:fa-check-circle, \
                        refresh.*:fa-refresh, \
                        install.*:fa-wrench,\
                        stop.*:fa-stop,\
                        terminate.*:fa-stop,\
                        cancel.*:fa-stop,\
                        discard.*:fa-trash-o,\
                        pause.*:fa-pause,\
                        suspend.*:fa-pause,\
                        resume.*:fa-play,\
                        renew.*:fa-repeat,\
                        reset.*:fa-repeat,\
                        categorise.*:fa-folder-open-o,\
                        assign.*:fa-hand-o-right,\
                        approve.*:fa-thumbs-o-up,\
                        decline.*:fa-thumbs-o-down


#
# patterns for applying CssClass facet (CSS styles), matching on member names
#
isis.reflector.facet.cssClass.patterns=\
                        delete.*:btn-danger,\
                        discard.*:btn-warning,\
                        remove.*:btn-warning


#
# Whether actions require @Action annotation to be recognised
#
isis.reflector.explicitAnnotations.action=true

#
# whether to suppress posting of events if not specified (left as Xxx.Default); defaults to true
#

#isis.reflector.facet.actionAnnotation.domainEvent.postForDefault=false
#isis.reflector.facet.collectionAnnotation.domainEvent.postForDefault=false
#isis.reflector.facet.propertyAnnotation.domainEvent.postForDefault=false

#isis.reflector.facet.domainObjectLayoutAnnotation.cssClassUiEvent.postForDefault=false
#isis.reflector.facet.domainObjectLayoutAnnotation.iconUiEvent.postForDefault=false
#isis.reflector.facet.domainObjectLayoutAnnotation.titleUiEvent.postForDefault=false

#isis.reflector.facet.domainObjectAnnotation.createdLifecycleEvent.postForDefault=false
#isis.reflector.facet.domainObjectAnnotation.persistingLifecycleEvent.postForDefault=false
#isis.reflector.facet.domainObjectAnnotation.persistedLifecycleEvent.postForDefault=false
#isis.reflector.facet.domainObjectAnnotation.loadedLifecycleEvent.postForDefault=false
#isis.reflector.facet.domainObjectAnnotation.updatingLifecycleEvent.postForDefault=false
#isis.reflector.facet.domainObjectAnnotation.updatedLifecycleEvent.postForDefault=false
#isis.reflector.facet.domainObjectAnnotation.removingLifecycleEvent.postForDefault=false

#################################################################################
#
# Domain Service configuration
#
#################################################################################

#
# required by EmailServiceDefault
#
#isis.service.email.sender.address=some.valid@email.address
#isis.service.email.sender.password=the.password.for-isis.service.email.sender.address


#
# whether ExceptionRecognizers should also log any recognized exceptions
# (default false; enable for diagnostics/debugging)
#
#isis.services.exceprecog.logRecognizedExceptions=true


#
# disable to (automatically registered) ExceptionRecognizerCompositeForJdoObjectStore service
# almost all of this service should be registered.  Since all exception recognizer implementations
# are consulted in the event of an exception, it's not sufficient to override the implementation
# (in isis.services); instead this configuration property disables this particular implementation.
#
#isis.services.ExceptionRecognizerCompositeForJdoObjectStore.disable=true


################################################################################
#
# Auditing, Commands, Publishing
#
################################################################################

#
# Whether changes to objects should be audited; if not set, defaults to "none"
# - if not set or set to "none", can explicitly enable using @DomainObject(auditing=Auditing.ENABLED)
# - if set to "all", can explicitly disable using @DomainObject(auditing=Auditing.DISABLED)
#
#isis.services.audit.objects=all|none
isis.services.audit.objects=all


#
# Whether all (or all non-query only) actions should be reified as commands; if not set, defaults to "none"
# - if not set or set to "none", can explicitly enable using @Action(command=CommandReification.ENABLED)
# - if set to "all", can explicitly disable using @Action(command=CommandReification.DISABLED)
#
#isis.services.command.actions=all|none|ignoreSafe
isis.services.command.actions=ignoreSafe


#
# Whether property edits should be reified into commands; if not set, defaults to "none"
# - if not set or set to "none", can explicitly enable using @Property(command=CommandReification.ENABLED)
# - if set to "all", can explicitly disable using @Property(command=CommandReification.DISABLED)
#
#isis.services.command.properties=all|none
isis.services.command.properties=all



#
# Whether changes to objects should be published; if not set, defaults to "none"
# - if not set or set to "none", can explicitly enable using @DomainObject(publishing=Publishing.ENABLED)
# - if set to "all", can explicitly disable using @Object(publishing=Publishing.DISABLED)
#
#isis.services.publish.objects=all|none
isis.services.publish.objects=all


#
# Whether all (or all non-query only) action invocations should be published; if not set, defaults to "none"
# - if not set or set to "none", can explicitly enable using @Action(publishing=Publishing.ENABLED)
# - if set to "all", can explicitly disable using @Action(publishing=Publishing.DISABLED)
#
#isis.services.publish.actions=all|none|ignoreSafe
isis.services.publish.actions=all


#
# Whether all property edits sshould be published; if not set, defaults to "none"
# - if not set or set to "none", can explicitly enable using @Property(publishing=Publishing.ENABLED)
# - if set to "all", can explicitly disable using @Property(publishing=Publishing.DISABLED)
#
#isis.services.publish.properties=all|none
isis.services.publish.properties=all



#
# Whether the ApplicationFeatureRepository should eagerly initialize itself (increasing start-up times)
# or initialize itself lazily.  Default is lazy initialization.
#
#isis.services.applicationFeatures.init=lazy|eager


#
# Whether the framework supports inject...() and set...() styles of dependency injection.   By default the former
# is disabled, the latter is enabled.  Disabling these settings can reduce application start-up times.
#
#isis.services.injector.injectPrefix=false|true
#isis.services.injector.setPrefix=false|true
isis.services.injector.setPrefix=false




################################################################################
#
# Policies
#
#################################################################################

#
# Whether editing of object properties is allowed; if not set, defaults to "true"
# - if not set or set to "true", can explicitly disable using @DomainObject(editing=Editing.DISABLED)
# - if set to "false", can explicitly enable using @DomainObject(editing=Editing.ENABLED)
#
#isis.objects.editing=true|false
isis.objects.editing=true



################################################################################
#
# i18n
#
#################################################################################

#
# force read translations, even if running in prototype mode
#
#isis.services.translation.po.mode=read



################################################################################
#
# Viewer defaults
#
#################################################################################

#
# Specify viewer defaults
# 
#isis.viewers.paged.standalone=30
#isis.viewers.paged.parented=10


#isis.viewers.propertyLayout.labelPosition=LEFT
#isis.viewers.parameterLayout.labelPosition=LEFT


#################################################################################
#
# Value facet defaults
#
# (see also viewer-specific config files, eg viewer_wicket.properties)
#
#################################################################################

# as used by @Title of a date
isis.value.format.date=dd-MM-yyyy



